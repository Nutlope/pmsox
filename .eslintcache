[{"/Users/hassan/dev/react/pmsox/src/index.js":"1","/Users/hassan/dev/react/pmsox/src/App.js":"2","/Users/hassan/dev/react/pmsox/src/firebase_keys.js":"3"},{"size":197,"mtime":1612130099102,"results":"4","hashOfConfig":"5"},{"size":1306,"mtime":1612143272045,"results":"6","hashOfConfig":"5"},{"size":342,"mtime":1612143345153,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1kkzprn",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hassan/dev/react/pmsox/src/index.js",[],["16","17"],"/Users/hassan/dev/react/pmsox/src/App.js",["18"],"import firebase from \"firebase/app\";\nimport constants from \"./firebase_keys.js\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/functions\";\nimport \"firebase/analytics\";\nimport GoogleButton from \"react-google-button\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(constants);\n}\nconst auth = firebase.auth();\n// const firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      {user && <h1>Welcome to PMSox!</h1>}\n      {user && <img src={auth.currentUser.photoURL} alt=\"Photo\"></img>}\n      {user && <h3>Logged in as: {auth.currentUser.displayName}</h3>}\n      {!user && <h1>Please sign into the pmsox app</h1>}\n      <SignOut />\n      <SignIn />\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return !auth.currentUser && <GoogleButton onClick={signInWithGoogle} />;\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </button>\n    )\n  );\n}\n\nexport default App;\n","/Users/hassan/dev/react/pmsox/src/firebase_keys.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":24,"column":16,"nodeType":"25","endLine":24,"endColumn":65},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]